name: Build and push docker images

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * MON'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-docker:
    name: Build docker images
    uses: ./.github/workflows/BuildDockerTask.yml
    secrets: inherit
    with:
      push: true

  tool-version-matrix:
    name: Get tool versions
    runs-on: ubuntu-latest
    needs: build-docker
    strategy:
      matrix:
        include:
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'debian' || 'debian-develop' }}
            file: debian.ver
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'alpine' || 'alpine-develop' }}
            file: alpine.ver
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'ubuntu' || 'ubuntu-develop' }}
            file: ubuntu.ver

    steps:

    - name: Get image size
      run: |
        mkdir -p ${{ runner.temp }}/versions
        touch ${{ runner.temp }}/versions/${{ matrix.file }}
        echo Image: docker.io/ptr727/plexcleaner:${{ matrix.tag }} >> ${{ runner.temp }}/versions/${{ matrix.file }}
        echo Size: $(docker manifest inspect -v docker.io/ptr727/plexcleaner:${{ matrix.tag }} | jq '.[] | select(.Descriptor.platform.architecture=="amd64") | [.OCIManifest.layers[].size] | add' | numfmt --to=iec) >> ${{ runner.temp }}/versions/${{ matrix.file }}

    - name: Write tool versions to file
      uses: addnab/docker-run-action@v3
      with:
        image: docker.io/ptr727/plexcleaner:${{ matrix.tag }}
        options: --volume ${{ runner.temp }}/versions:/versions
        run: |
          echo OS: $(. /etc/os-release; echo $PRETTY_NAME) >> /versions/${{ matrix.file }}
          echo dotNET: $(dotnet --info) >> /versions/${{ matrix.file }}
          echo PlexCleaner: $(/PlexCleaner/PlexCleaner --version) >> /versions/${{ matrix.file }}
          echo HandBrakeCLI: $(HandBrakeCLI --version) >> /versions/${{ matrix.file }}
          echo MediaInfo: $(mediainfo --version) >> /versions/${{ matrix.file }}
          echo MkvMerge: $(mkvmerge --version) >> /versions/${{ matrix.file }}
          echo FfMpeg: $(ffmpeg -version) >> /versions/${{ matrix.file }}

    - name: Print versions
      run: cat ${{ runner.temp }}/versions/${{ matrix.file }}

    - name: Upload version artifacts
      uses: actions/upload-artifact@v4
      with:
        name: versions-${{ matrix.file }}
        path: ${{ runner.temp }}/versions/${{ matrix.file }}

  update-readme:
    name: Create Docker README.md
    runs-on: ubuntu-latest
    needs: tool-version-matrix
    if: ${{ endsWith(github.ref, 'refs/heads/main') }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Download version artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: versions-*
        merge-multiple: true
        path: ${{ runner.temp }}/versions

    - name: Create README.md from README.m4
      run: m4 --include=${{ runner.temp }}/versions ./Docker/README.m4 > ${{ runner.temp }}/README.md

    - name: Update Docker Hub README.md
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        repository: ptr727/plexcleaner
        short-description: ${{ github.event.repository.description }}
        readme-filepath: ${{ runner.temp }}/README.md

  date-badge:
    name: Create date badge
    runs-on: ubuntu-latest
    needs: build-docker
    if: ${{ endsWith(github.ref, 'refs/heads/main') }}

    steps:

      - id: date
        run: |
          echo "date=$(date)" >> $GITHUB_OUTPUT

      - name: Build date badge
        uses: RubbaBoy/BYOB@v1
        with:
          name: lastbuild
          label: "Last Build"
          icon: "github"
          status: ${{ steps.date.outputs.date }}
          color: "blue"
          github_token: ${{ secrets.GITHUB_TOKEN }}
